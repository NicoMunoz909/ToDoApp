(()=>{"use strict";var r={382:(r,n,e)=>{e.d(n,{Z:()=>s});var t=e(15),i=e.n(t),o=e(645),a=e.n(o)()(i());a.push([r.id,"* {\r\n    box-sizing: border-box;\r\n}\r\n.calendar-container {\r\n    border: 1px solid black;\r\n    width: 350px;\r\n    height: 300px;\r\n    margin: auto;\r\n    border-radius: 10px;\r\n    position: absolute;\r\n    z-index: 800;\r\n    background-color: black;\r\n}\r\n.calendar-header {\r\n    border-bottom: 1px solid black;\r\n    height: 50px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n.previous {\r\n    position: relative;\r\n    left: 10px;\r\n}\r\n\r\n.previous:hover {\r\n    cursor: pointer;\r\n}\r\n.next {\r\n    position: relative;\r\n    right: 10px;\r\n}\r\n.next:hover {\r\n    cursor: pointer;\r\n}\r\n.calendar-grid {\r\n    display: grid;\r\n    height: 250px;\r\n    width: 100%;\r\n    grid-template-columns: repeat(7, 1fr);\r\n    grid-template-rows: repeat(7, 1fr);\r\n    text-align: center;\r\n}\r\n.grid-header {\r\n    grid-column: span 7;\r\n    display: grid;\r\n    grid-template-columns: repeat(7, 1fr);\r\n    grid-template-rows: 1fr;\r\n}\r\n.grid-body {\r\n    grid-column: span 7;\r\n    grid-row: span 7;\r\n    display: grid;\r\n    grid-template-columns: repeat(7, 1fr);\r\n    grid-template-rows: repeat(6, 1fr);\r\n}\r\n.grid-cell {\r\n    width: 60%;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: auto;\r\n}\r\n.grid-cell:hover {\r\n    cursor: pointer;\r\n    background-color: rgb(54, 52, 52);\r\n    transition: 0.4s;\r\n}","",{version:3,sources:["webpack://./src/calendar.css"],names:[],mappings:"AAAA;IACI,sBAAsB;AAC1B;AACA;IACI,uBAAuB;IACvB,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,mBAAmB;IACnB,kBAAkB;IAClB,YAAY;IACZ,uBAAuB;AAC3B;AACA;IACI,8BAA8B;IAC9B,YAAY;IACZ,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;AACA;IACI,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,eAAe;AACnB;AACA;IACI,kBAAkB;IAClB,WAAW;AACf;AACA;IACI,eAAe;AACnB;AACA;IACI,aAAa;IACb,aAAa;IACb,WAAW;IACX,qCAAqC;IACrC,kCAAkC;IAClC,kBAAkB;AACtB;AACA;IACI,mBAAmB;IACnB,aAAa;IACb,qCAAqC;IACrC,uBAAuB;AAC3B;AACA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,aAAa;IACb,qCAAqC;IACrC,kCAAkC;AACtC;AACA;IACI,UAAU;IACV,kBAAkB;IAClB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;AAChB;AACA;IACI,eAAe;IACf,iCAAiC;IACjC,gBAAgB;AACpB",sourcesContent:["* {\r\n    box-sizing: border-box;\r\n}\r\n.calendar-container {\r\n    border: 1px solid black;\r\n    width: 350px;\r\n    height: 300px;\r\n    margin: auto;\r\n    border-radius: 10px;\r\n    position: absolute;\r\n    z-index: 800;\r\n    background-color: black;\r\n}\r\n.calendar-header {\r\n    border-bottom: 1px solid black;\r\n    height: 50px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n.previous {\r\n    position: relative;\r\n    left: 10px;\r\n}\r\n\r\n.previous:hover {\r\n    cursor: pointer;\r\n}\r\n.next {\r\n    position: relative;\r\n    right: 10px;\r\n}\r\n.next:hover {\r\n    cursor: pointer;\r\n}\r\n.calendar-grid {\r\n    display: grid;\r\n    height: 250px;\r\n    width: 100%;\r\n    grid-template-columns: repeat(7, 1fr);\r\n    grid-template-rows: repeat(7, 1fr);\r\n    text-align: center;\r\n}\r\n.grid-header {\r\n    grid-column: span 7;\r\n    display: grid;\r\n    grid-template-columns: repeat(7, 1fr);\r\n    grid-template-rows: 1fr;\r\n}\r\n.grid-body {\r\n    grid-column: span 7;\r\n    grid-row: span 7;\r\n    display: grid;\r\n    grid-template-columns: repeat(7, 1fr);\r\n    grid-template-rows: repeat(6, 1fr);\r\n}\r\n.grid-cell {\r\n    width: 60%;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: auto;\r\n}\r\n.grid-cell:hover {\r\n    cursor: pointer;\r\n    background-color: rgb(54, 52, 52);\r\n    transition: 0.4s;\r\n}"],sourceRoot:""}]);const s=a},426:(r,n,e)=>{e.d(n,{Z:()=>s});var t=e(15),i=e.n(t),o=e(645),a=e.n(o)()(i());a.push([r.id,"* {\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  margin: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: grid;\r\n  grid-template-columns: repeat(12, 1fr);\r\n  background: rgb(47, 47, 47);\r\n  color: white;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  overflow: hidden;\r\n}\r\n\r\n.opaque {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  background-color: rgb(148, 143, 143);\r\n  z-index: 100;\r\n  display: none;\r\n  opacity: 0;\r\n}\r\n\r\n.sidebar {\r\n  grid-column: span 2;\r\n  border-right: solid rgb(34, 34, 34);\r\n  box-shadow: 1px 0px 5px rgb(77, 77, 77),\r\n              -4px 0px 9px -4px rgb(77, 77, 77) inset;\r\n  display: grid;\r\n  grid-template-columns: 100%;\r\n  grid-template-rows: repeat(auto-fill, 40px);\r\n  align-items: center;\r\n  justify-items: center;\r\n  padding-top: 3vh;\r\n}\r\n\r\nbutton {\r\n  background: rgb(47, 47, 47);\r\n  color: white;\r\n  box-shadow: 1px 1px 2px rgb(32, 32, 32) inset,\r\n  -1px -1px 1px rgb(110, 109, 109) inset;\r\n  border: none;\r\n  border-radius: 20px;\r\n  padding: 1vh;\r\n  width: 60%;\r\n  text-align: left;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: rgb(77, 75, 75);\r\n  cursor: pointer;\r\n}\r\n\r\n.separator1 {\r\n  width: 90%;\r\n  border-color: rgb(139, 137, 137);\r\n}\r\n\r\n.separator2 {\r\n  width: 100%;\r\n  border-color: rgb(139, 137, 137);\r\n  grid-column: 4/12;\r\n  height: fit-content;\r\n}\r\n\r\nh2 {\r\n  font-size: 2vw;\r\n}\r\n\r\nmain {\r\n  grid-column: 4/12;\r\n  height: 100%;\r\n  overflow-y: scroll;\r\n  padding-right: 1vw;\r\n}\r\n\r\nheader {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.task {\r\n  display: grid;\r\n  grid-template-columns: repeat(12, 1fr);\r\n  grid-template-rows: 50px 120px;\r\n  align-items: center;\r\n  height: 50px;\r\n  margin: auto;\r\n  box-shadow: 1px 1px 2px rgb(32, 32, 32) inset,\r\n              -1px -1px 1px rgb(110, 109, 109) inset;\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n  padding-left: 20px;\r\n  margin-bottom: 20px;\r\n} \r\n\r\n.task--checkbox__incomplete {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 30px;\r\n  width: 30px;\r\n  border-radius: 50%;\r\n  border: solid 2px rgb(95, 95, 95);\r\n  grid-column: span 1;\r\n  color: rgb(47, 47, 47);\r\n}\r\n\r\n.task--checkbox__incomplete:hover {\r\n  color: white;\r\n  transition: 0.3s;\r\n  cursor: pointer;\r\n}\r\n\r\n.task--checkbox__complete {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 30px;\r\n  width: 30px;\r\n  border-radius: 50%;\r\n  border: solid 2px rgb(95, 95, 95);\r\n  grid-column: span 1;\r\n  color: white;\r\n}\r\n\r\n.task--checkbox__complete:hover {\r\n  color: red;\r\n  transition: 0.3s;\r\n  cursor: pointer;\r\n}\r\n\r\n.task--expand-colapse{\r\n  grid-column: 11/12;\r\n}\r\n\r\n.fa-chevron-down, .fa-chevron-up {\r\n  font-size: 30px;\r\n}\r\n\r\n.fa-chevron-down:hover, .fa-chevron-up:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n.task--title {\r\n  grid-column: span 3;\r\n  position: relative;\r\n}\r\n\r\n.task--project {\r\n  grid-column: span 3;\r\n}\r\n\r\n.task--text {\r\n  display: inline;\r\n  margin-left: 20px;\r\n}\r\n\r\n.task--date {\r\n  grid-column: span 3;\r\n}\r\n\r\n.task--priority-edit {\r\n  display: flex;\r\n  align-self: flex-start;\r\n  flex-direction: column;\r\n  position: relative;\r\n}\r\n\r\n.task--priority-menu {\r\n  position: absolute;\r\n  top: 25px;\r\n  left: 0;\r\n  width: 70%;\r\n}\r\n\r\n.priority--option {\r\n  font-size: 11px;\r\n  border-radius: 20px;\r\n  padding-left: 3px;\r\n  margin-bottom: 3px;\r\n}\r\n\r\n.priority--option:hover {\r\n  cursor: pointer;\r\n  transform: translateX(5px);\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n}\r\n\r\n.task--priority__very-high {\r\n  height: 100%;\r\n  width: 100%;\r\n  background: linear-gradient(90deg, rgb(47, 47, 47) 0%, rgba(230,20,20,1) 100%);\r\n  grid-column: 12/14;\r\n  grid-row: 1/3;\r\n  z-index: -100;\r\n}\r\n\r\n.task--priority__high {\r\n  height: 100%;\r\n  width: 100%;\r\n  background: linear-gradient(90deg, rgb(47, 47, 47) 0%, rgb(226, 92, 92) 100%);\r\n  grid-column: 12/14;\r\n  grid-row: 1/3;\r\n  z-index: -100;\r\n}\r\n\r\n.task--priority__normal {\r\n  height: 100%;\r\n  width: 100%;\r\n  background: linear-gradient(90deg, rgb(47, 47, 47) 0%, rgb(47, 47, 47) 100%);\r\n  grid-column: 12/14;\r\n  grid-row: 1/3;\r\n  z-index: -100;\r\n}\r\n\r\n.task--priority__low {\r\n  height: 100%;\r\n  width: 100%;\r\n  background: linear-gradient(90deg, rgb(47, 47, 47) 0%, rgb(45, 230, 20) 100%);\r\n  grid-column: 12/14;\r\n  grid-row: 1/3;\r\n  z-index: -100;\r\n}\r\n\r\n.task--priority__very-low {\r\n  height: 100%;\r\n  width: 100%;\r\n  background: linear-gradient(90deg, rgb(47, 47, 47) 0%, rgb(8, 80, 6) 100%);\r\n  grid-column: 12/14;\r\n  grid-row: 1/3;\r\n  z-index: -100;\r\n}\r\n\r\n.task-description {\r\n  grid-column: span 7;\r\n  max-height: 100px;\r\n  overflow-y: scroll;\r\n  margin-bottom: 10px;\r\n  margin-right: 20px;\r\n  position: relative;\r\n}\r\n\r\n.task--button {\r\n  display: block;\r\n  position: initial;\r\n  align-self: flex-start;\r\n  width: fit-content;\r\n}\r\n\r\n.task--button:hover {\r\n  color: black;\r\n  transition: 0.2s;\r\n  cursor: pointer;\r\n}\r\n\r\n.task--edit {\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  box-shadow: 1px 1px 2px rgb(32, 32, 32) inset,\r\n              -1px -1px 1px rgb(110, 109, 109) inset;\r\n  width: 90%;\r\n  height: 100%;\r\n}\r\n\r\n.buttons-container {\r\n  grid-column: 8/12;\r\n  grid-row: 2/3;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.edit-buttons {\r\n  width: 90%;\r\n  height: 50%;\r\n  position: relative;\r\n  top: 20px;\r\n}\r\n\r\n#save-changes {\r\n  grid-column: 2/3;\r\n  grid-row: 2/3;\r\n}\r\n\r\n#cancel-changes {\r\n  grid-column: 3/4;\r\n  grid-row: 2/3;\r\n}\r\n\r\n.completed {\r\n  color: white;\r\n  background-color: rgb(83, 80, 80);\r\n}\r\n\r\n::-webkit-scrollbar, ::-webkit-scrollbar-corner {\r\n  background-color: transparent;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background-color: rgb(255, 247, 247);\r\n  border-radius: 20px;\r\n}\r\n\r\n.create-task-form {\r\n  z-index: 200;\r\n  background-color: rgb(47, 47, 47);\r\n  position: absolute;\r\n  left: 25%;\r\n  top: 10%;\r\n  display: none;\r\n  opacity: 0;\r\n}\r\n\r\n.form--title {\r\n  width: 100%;\r\n  height: 60%;\r\n  margin: 0;\r\n  padding-left: 10px;\r\n}\r\n\r\n.form--project {\r\n  justify-self: center;\r\n}\r\n\r\n.form--date {\r\n  grid-column: 8/10;\r\n}\r\n\r\n.form--description {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-left: 10px;\r\n}\r\n\r\n.form--description--container {\r\n  height: 100%;\r\n}\r\n\r\n.form--priority {\r\n  display: flex;\r\n}\r\n\r\n.fa-times-circle {\r\n  grid-column: 12/13;\r\n  grid-row: 1/2;\r\n  justify-self: right;\r\n  align-self: flex-start;\r\n  margin-right: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.fa-times-circle:hover {\r\n  color: red;\r\n  cursor: pointer;\r\n}\r\n\r\n.collapsed {\r\n  height: 50px;\r\n  transition: .4s ease-in;\r\n}\r\n\r\n.expanded {\r\n  height: 170px;\r\n  transition: .4s ease-out;\r\n}\r\n\r\n.select--small {\r\n  font-size: 12px;\r\n  margin-left: 10px;\r\n}\r\n\r\n.select--small:hover {\r\n  cursor: pointer;\r\n  color: black;\r\n}\r\n\r\n\r\n.form--accept {\r\n  grid-column: 12/13;\r\n  grid-row: 2/3;\r\n  width: 16px;\r\n  height: 16px;\r\n  align-self: flex-end;\r\n  justify-self: flex-end;\r\n  margin-bottom: 10px;\r\n  margin-right: 10px;\r\n  display: block;\r\n}\r\n\r\n.form--accept:hover {\r\n  cursor: pointer;\r\n  color: green;\r\n}\r\n\r\ninput {\r\n  background-color: rgb(47, 47, 47);\r\n  border-radius: 20px;\r\n  color: white;\r\n  border: none;\r\n  box-shadow: 1px 1px 2px rgb(32, 32, 32) inset,\r\n              -1px -1px 1px rgb(110, 109, 109) inset;\r\n}\r\n\r\ninput:focus-visible {\r\n  outline: none;\r\n}\r\n\r\n.form--visible {\r\n  display: grid;\r\n  opacity: 1;\r\n  transition: opacity .4s ease-in;\r\n}\r\n\r\n.opaque--visible {\r\n  display: block;\r\n  opacity: .6;\r\n  transition: opacity .4s ease-in;\r\n}\r\n\r\n.projects-header {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.round {\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n\r\n::-webkit-calendar-picker-indicator {\r\n  filter: invert(1);\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["* {\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  margin: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: grid;\r\n  grid-template-columns: repeat(12, 1fr);\r\n  background: rgb(47, 47, 47);\r\n  color: white;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  overflow: hidden;\r\n}\r\n\r\n.opaque {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  background-color: rgb(148, 143, 143);\r\n  z-index: 100;\r\n  display: none;\r\n  opacity: 0;\r\n}\r\n\r\n.sidebar {\r\n  grid-column: span 2;\r\n  border-right: solid rgb(34, 34, 34);\r\n  box-shadow: 1px 0px 5px rgb(77, 77, 77),\r\n              -4px 0px 9px -4px rgb(77, 77, 77) inset;\r\n  display: grid;\r\n  grid-template-columns: 100%;\r\n  grid-template-rows: repeat(auto-fill, 40px);\r\n  align-items: center;\r\n  justify-items: center;\r\n  padding-top: 3vh;\r\n}\r\n\r\nbutton {\r\n  background: rgb(47, 47, 47);\r\n  color: white;\r\n  box-shadow: 1px 1px 2px rgb(32, 32, 32) inset,\r\n  -1px -1px 1px rgb(110, 109, 109) inset;\r\n  border: none;\r\n  border-radius: 20px;\r\n  padding: 1vh;\r\n  width: 60%;\r\n  text-align: left;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: rgb(77, 75, 75);\r\n  cursor: pointer;\r\n}\r\n\r\n.separator1 {\r\n  width: 90%;\r\n  border-color: rgb(139, 137, 137);\r\n}\r\n\r\n.separator2 {\r\n  width: 100%;\r\n  border-color: rgb(139, 137, 137);\r\n  grid-column: 4/12;\r\n  height: fit-content;\r\n}\r\n\r\nh2 {\r\n  font-size: 2vw;\r\n}\r\n\r\nmain {\r\n  grid-column: 4/12;\r\n  height: 100%;\r\n  overflow-y: scroll;\r\n  padding-right: 1vw;\r\n}\r\n\r\nheader {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.task {\r\n  display: grid;\r\n  grid-template-columns: repeat(12, 1fr);\r\n  grid-template-rows: 50px 120px;\r\n  align-items: center;\r\n  height: 50px;\r\n  margin: auto;\r\n  box-shadow: 1px 1px 2px rgb(32, 32, 32) inset,\r\n              -1px -1px 1px rgb(110, 109, 109) inset;\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n  padding-left: 20px;\r\n  margin-bottom: 20px;\r\n} \r\n\r\n.task--checkbox__incomplete {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 30px;\r\n  width: 30px;\r\n  border-radius: 50%;\r\n  border: solid 2px rgb(95, 95, 95);\r\n  grid-column: span 1;\r\n  color: rgb(47, 47, 47);\r\n}\r\n\r\n.task--checkbox__incomplete:hover {\r\n  color: white;\r\n  transition: 0.3s;\r\n  cursor: pointer;\r\n}\r\n\r\n.task--checkbox__complete {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 30px;\r\n  width: 30px;\r\n  border-radius: 50%;\r\n  border: solid 2px rgb(95, 95, 95);\r\n  grid-column: span 1;\r\n  color: white;\r\n}\r\n\r\n.task--checkbox__complete:hover {\r\n  color: red;\r\n  transition: 0.3s;\r\n  cursor: pointer;\r\n}\r\n\r\n.task--expand-colapse{\r\n  grid-column: 11/12;\r\n}\r\n\r\n.fa-chevron-down, .fa-chevron-up {\r\n  font-size: 30px;\r\n}\r\n\r\n.fa-chevron-down:hover, .fa-chevron-up:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n.task--title {\r\n  grid-column: span 3;\r\n  position: relative;\r\n}\r\n\r\n.task--project {\r\n  grid-column: span 3;\r\n}\r\n\r\n.task--text {\r\n  display: inline;\r\n  margin-left: 20px;\r\n}\r\n\r\n.task--date {\r\n  grid-column: span 3;\r\n}\r\n\r\n.task--priority-edit {\r\n  display: flex;\r\n  align-self: flex-start;\r\n  flex-direction: column;\r\n  position: relative;\r\n}\r\n\r\n.task--priority-menu {\r\n  position: absolute;\r\n  top: 25px;\r\n  left: 0;\r\n  width: 70%;\r\n}\r\n\r\n.priority--option {\r\n  font-size: 11px;\r\n  border-radius: 20px;\r\n  padding-left: 3px;\r\n  margin-bottom: 3px;\r\n}\r\n\r\n.priority--option:hover {\r\n  cursor: pointer;\r\n  transform: translateX(5px);\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n}\r\n\r\n.task--priority__very-high {\r\n  height: 100%;\r\n  width: 100%;\r\n  background: linear-gradient(90deg, rgb(47, 47, 47) 0%, rgba(230,20,20,1) 100%);\r\n  grid-column: 12/14;\r\n  grid-row: 1/3;\r\n  z-index: -100;\r\n}\r\n\r\n.task--priority__high {\r\n  height: 100%;\r\n  width: 100%;\r\n  background: linear-gradient(90deg, rgb(47, 47, 47) 0%, rgb(226, 92, 92) 100%);\r\n  grid-column: 12/14;\r\n  grid-row: 1/3;\r\n  z-index: -100;\r\n}\r\n\r\n.task--priority__normal {\r\n  height: 100%;\r\n  width: 100%;\r\n  background: linear-gradient(90deg, rgb(47, 47, 47) 0%, rgb(47, 47, 47) 100%);\r\n  grid-column: 12/14;\r\n  grid-row: 1/3;\r\n  z-index: -100;\r\n}\r\n\r\n.task--priority__low {\r\n  height: 100%;\r\n  width: 100%;\r\n  background: linear-gradient(90deg, rgb(47, 47, 47) 0%, rgb(45, 230, 20) 100%);\r\n  grid-column: 12/14;\r\n  grid-row: 1/3;\r\n  z-index: -100;\r\n}\r\n\r\n.task--priority__very-low {\r\n  height: 100%;\r\n  width: 100%;\r\n  background: linear-gradient(90deg, rgb(47, 47, 47) 0%, rgb(8, 80, 6) 100%);\r\n  grid-column: 12/14;\r\n  grid-row: 1/3;\r\n  z-index: -100;\r\n}\r\n\r\n.task-description {\r\n  grid-column: span 7;\r\n  max-height: 100px;\r\n  overflow-y: scroll;\r\n  margin-bottom: 10px;\r\n  margin-right: 20px;\r\n  position: relative;\r\n}\r\n\r\n.task--button {\r\n  display: block;\r\n  position: initial;\r\n  align-self: flex-start;\r\n  width: fit-content;\r\n}\r\n\r\n.task--button:hover {\r\n  color: black;\r\n  transition: 0.2s;\r\n  cursor: pointer;\r\n}\r\n\r\n.task--edit {\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  box-shadow: 1px 1px 2px rgb(32, 32, 32) inset,\r\n              -1px -1px 1px rgb(110, 109, 109) inset;\r\n  width: 90%;\r\n  height: 100%;\r\n}\r\n\r\n.buttons-container {\r\n  grid-column: 8/12;\r\n  grid-row: 2/3;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.edit-buttons {\r\n  width: 90%;\r\n  height: 50%;\r\n  position: relative;\r\n  top: 20px;\r\n}\r\n\r\n#save-changes {\r\n  grid-column: 2/3;\r\n  grid-row: 2/3;\r\n}\r\n\r\n#cancel-changes {\r\n  grid-column: 3/4;\r\n  grid-row: 2/3;\r\n}\r\n\r\n.completed {\r\n  color: white;\r\n  background-color: rgb(83, 80, 80);\r\n}\r\n\r\n::-webkit-scrollbar, ::-webkit-scrollbar-corner {\r\n  background-color: transparent;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background-color: rgb(255, 247, 247);\r\n  border-radius: 20px;\r\n}\r\n\r\n.create-task-form {\r\n  z-index: 200;\r\n  background-color: rgb(47, 47, 47);\r\n  position: absolute;\r\n  left: 25%;\r\n  top: 10%;\r\n  display: none;\r\n  opacity: 0;\r\n}\r\n\r\n.form--title {\r\n  width: 100%;\r\n  height: 60%;\r\n  margin: 0;\r\n  padding-left: 10px;\r\n}\r\n\r\n.form--project {\r\n  justify-self: center;\r\n}\r\n\r\n.form--date {\r\n  grid-column: 8/10;\r\n}\r\n\r\n.form--description {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-left: 10px;\r\n}\r\n\r\n.form--description--container {\r\n  height: 100%;\r\n}\r\n\r\n.form--priority {\r\n  display: flex;\r\n}\r\n\r\n.fa-times-circle {\r\n  grid-column: 12/13;\r\n  grid-row: 1/2;\r\n  justify-self: right;\r\n  align-self: flex-start;\r\n  margin-right: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.fa-times-circle:hover {\r\n  color: red;\r\n  cursor: pointer;\r\n}\r\n\r\n.collapsed {\r\n  height: 50px;\r\n  transition: .4s ease-in;\r\n}\r\n\r\n.expanded {\r\n  height: 170px;\r\n  transition: .4s ease-out;\r\n}\r\n\r\n.select--small {\r\n  font-size: 12px;\r\n  margin-left: 10px;\r\n}\r\n\r\n.select--small:hover {\r\n  cursor: pointer;\r\n  color: black;\r\n}\r\n\r\n\r\n.form--accept {\r\n  grid-column: 12/13;\r\n  grid-row: 2/3;\r\n  width: 16px;\r\n  height: 16px;\r\n  align-self: flex-end;\r\n  justify-self: flex-end;\r\n  margin-bottom: 10px;\r\n  margin-right: 10px;\r\n  display: block;\r\n}\r\n\r\n.form--accept:hover {\r\n  cursor: pointer;\r\n  color: green;\r\n}\r\n\r\ninput {\r\n  background-color: rgb(47, 47, 47);\r\n  border-radius: 20px;\r\n  color: white;\r\n  border: none;\r\n  box-shadow: 1px 1px 2px rgb(32, 32, 32) inset,\r\n              -1px -1px 1px rgb(110, 109, 109) inset;\r\n}\r\n\r\ninput:focus-visible {\r\n  outline: none;\r\n}\r\n\r\n.form--visible {\r\n  display: grid;\r\n  opacity: 1;\r\n  transition: opacity .4s ease-in;\r\n}\r\n\r\n.opaque--visible {\r\n  display: block;\r\n  opacity: .6;\r\n  transition: opacity .4s ease-in;\r\n}\r\n\r\n.projects-header {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.round {\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n\r\n::-webkit-calendar-picker-indicator {\r\n  filter: invert(1);\r\n}"],sourceRoot:""}]);const s=a},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e=r(n);return n[2]?"@media ".concat(n[2]," {").concat(e,"}"):e})).join("")},n.i=function(r,e,t){"string"==typeof r&&(r=[[null,r,""]]);var i={};if(t)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(i[a]=!0)}for(var s=0;s<r.length;s++){var d=[].concat(r[s]);t&&i[d[0]]||(e&&(d[2]?d[2]="".concat(e," and ").concat(d[2]):d[2]=e),n.push(d))}},n}},15:r=>{function n(r,n){(null==n||n>r.length)&&(n=r.length);for(var e=0,t=new Array(n);e<n;e++)t[e]=r[e];return t}r.exports=function(r){var e,t,i=(t=4,function(r){if(Array.isArray(r))return r}(e=r)||function(r,n){var e=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=e){var t,i,o=[],a=!0,s=!1;try{for(e=e.call(r);!(a=(t=e.next()).done)&&(o.push(t.value),!n||o.length!==n);a=!0);}catch(r){s=!0,i=r}finally{try{a||null==e.return||e.return()}finally{if(s)throw i}}return o}}(e,t)||function(r,e){if(r){if("string"==typeof r)return n(r,e);var t=Object.prototype.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?n(r,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=i[1],a=i[3];if(!a)return o;if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),A="/*# ".concat(d," */"),c=a.sources.map((function(r){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(r," */")}));return[o].concat(c).concat([A]).join("\n")}return[o].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var o={},a=[],s=0;s<r.length;s++){var d=r[s],A=t.base?d[0]+t.base:d[0],c=o[A]||0,l="".concat(A," ").concat(c);o[A]=c+1;var p=e(l),u={css:d[1],media:d[2],sourceMap:d[3]};-1!==p?(n[p].references++,n[p].updater(u)):n.push({identifier:l,updater:i(u,t),references:1}),a.push(l)}return a}function i(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap)return;e.update(r=n)}else e.remove()}}r.exports=function(r,i){var o=t(r=r||[],i=i||{});return function(r){r=r||[];for(var a=0;a<o.length;a++){var s=e(o[a]);n[s].references--}for(var d=t(r,i),A=0;A<o.length;A++){var c=e(o[A]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}o=d}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t=e.css,i=e.media,o=e.sourceMap;i?r.setAttribute("media",i):r.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(t,r)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}}},n={};function e(t){var i=n[t];if(void 0!==i)return i.exports;var o=n[t]={id:t,exports:{}};return r[t](o,o.exports,e),o.exports}e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),(()=>{var r=e(379),n=e.n(r),t=e(795),i=e.n(t),o=e(569),a=e.n(o),s=e(565),d=e.n(s),A=e(216),c=e.n(A),l=e(589),p=e.n(l),u=e(426),m={};m.styleTagTransform=p(),m.setAttributes=d(),m.insert=a().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=c(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const C=()=>{function r(){const r=this,n=r.querySelector("#expand-colapse-icon");r.classList.contains("collapsed")?(n.classList.add("fa-chevron-up"),n.classList.remove("fa-chevron-down"),r.classList.remove("collapsed"),r.classList.add("expanded")):(n.classList.add("fa-chevron-down"),n.classList.remove("fa-chevron-up"),r.classList.remove("expanded"),r.classList.add("collapsed"),r.querySelector("#priority-menu").classList.add("hidden"))}function n(){this.classList.toggle("hidden")}const e=e=>{const t=document.createElement("div");t.classList.add("task","collapsed"),t.id="task";const i=document.createElement("div");i.classList.add("task--checkbox__incomplete"),i.id="checkbox";const o=document.createElement("i");o.classList.add("fas","fa-check"),o.id="check-icon",i.appendChild(o),t.appendChild(i);const a=document.createElement("div");a.classList.add("task--title");const s=document.createElement("p");s.id="title",s.classList.add("task--text"),s.textContent=e.title;const d=document.createElement("input");d.type="text",d.id="title-edit",d.classList.add("task--title","task--edit","hidden"),a.appendChild(s),a.appendChild(d),t.appendChild(a);const A=document.createElement("div");A.classList.add("task--project");const c=document.createElement("i");c.classList.add("fas","fa-circle"),c.id="project";const l=document.createElement("p");l.classList.add("task--text"),l.textContent=e.project;const p=document.createElement("i");p.id="project-edit",p.classList.add("fas","fa-chevron-down","select--small","hidden"),A.appendChild(c),A.appendChild(l),A.appendChild(p),t.appendChild(A);const u=document.createElement("div");u.classList.add("task--date");const m=document.createElement("i");m.classList.add("far","fa-calendar-alt"),m.id="date";const C=document.createElement("p");C.classList.add("task--text"),C.textContent=e.date;const g=document.createElement("i");g.id="date-edit",g.classList.add("fas","fa-chevron-down","select--small","hidden"),u.appendChild(m),u.appendChild(C),u.appendChild(g),t.appendChild(u);const h=document.createElement("div");h.classList.add("task--expand-colapse"),h.id="expand-colapse",h.addEventListener("click",r.bind(t));const E=document.createElement("i");E.classList.add("fas","fa-chevron-down","task--button"),E.id="expand-colapse-icon",h.appendChild(E),t.appendChild(h);const b=document.createElement("div");switch(e.priority){case"Very Low":b.classList.add("task--priority__very-low");break;case"Low":b.classList.add("task--priority__low");break;case"Normal":b.classList.add("task--priority__normal");break;case"High":b.classList.add("task--priority__high");break;case"Very High":b.classList.add("task--priority__very-high")}b.id="priority",t.appendChild(b);const B=document.createElement("div");B.classList.add("task-description");const f=document.createElement("p");f.id="description",f.textContent=e.description;const k=document.createElement("input");k.type="text",k.classList.add("task--edit","task--description","hidden"),k.id="description-edit",B.appendChild(f),B.appendChild(k),t.appendChild(B);const y=document.createElement("div");y.classList.add("task--priority-edit");const x=document.createElement("i");x.classList.add("fas","fa-flag","task--button");const v=document.createElement("div");v.classList.add("task--priority-menu","hidden"),v.id="priority-menu";const w=document.createElement("div");w.classList.add("priority--option"),w.id="priority-vlow",w.dataset.value="Very Low",w.style="background: linear-gradient(270deg, rgb(47, 47, 47) 15%, rgb(8, 80, 6) 100%)",w.innerHTML="VL";const L=document.createElement("div");L.classList.add("priority--option"),L.id="priority-low",L.dataset.value="Low",L.style="background: linear-gradient(270deg, rgb(47, 47, 47) 15%, rgb(45, 230, 20) 100%)",L.innerHTML="L";const _=document.createElement("div");_.classList.add("priority--option"),_.id="priority-normal",_.dataset.value="Normal",_.innerHTML="N";const I=document.createElement("div");I.classList.add("priority--option"),I.id="priority-high",I.dataset.value="High",I.style="background: linear-gradient(270deg, rgb(47, 47, 47) 15%, rgb(226, 92, 92) 100%)",I.innerHTML="H";const S=document.createElement("div");S.classList.add("priority--option"),S.id="priority-vhigh",S.dataset.value="Very High",S.style="background: linear-gradient(270deg, rgb(47, 47, 47) 15%, rgba(230,20,20,1) 100%)",S.innerHTML="VH",y.appendChild(x),v.appendChild(S),v.appendChild(I),v.appendChild(_),v.appendChild(L),v.appendChild(w),y.appendChild(v),x.addEventListener("click",n.bind(v));const Y=document.createElement("i");Y.classList.add("fas","fa-pen","task--button"),Y.id="edit";const j=document.createElement("i");j.classList.add("fas","fa-trash-alt","task--button"),j.id="delete";const q=document.createElement("button");q.innerHTML="Save",q.id="save-changes",q.classList.add("edit-buttons","hidden");const T=document.createElement("button");T.innerHTML="Cancel",T.id="cancel-changes",T.classList.add("edit-buttons","hidden");const Z=document.createElement("div");return Z.classList.add("buttons-container"),Z.appendChild(y),Z.appendChild(Y),Z.appendChild(j),Z.appendChild(q),Z.appendChild(T),t.appendChild(Z),t};return{wipeContent:()=>{const r=document.getElementById("tasks-container");Array.from(r.childNodes).forEach((r=>{r.remove()}))},createTask:e,appendTask:r=>{document.getElementById("tasks-container").appendChild(r)},loadSidebar:()=>{const r=document.createElement("div");r.classList.add("sidebar"),r.id="sidebar";const n=document.createElement("button");n.type="button",n.id="inbox",n.textContent="Inbox",r.appendChild(n);const e=document.createElement("button");e.type="button",e.id="inbox",e.textContent="Today",r.appendChild(e);const t=document.createElement("button");t.type="button",t.id="inbox",t.textContent="Upcoming",r.appendChild(t);const i=document.createElement("button");i.type="button",i.id="inbox",i.textContent="Past",r.appendChild(i);const o=document.createElement("hr");o.classList.add("separator1"),r.appendChild(o);const a=document.createElement("div");a.classList.add("projects-header");const s=document.createElement("button");s.type="button",s.id="add-project";const d=document.createElement("i");d.classList.add("fas","fa-plus"),s.appendChild(d),a.appendChild(s);const A=document.createElement("h2");A.textContent="PROJECTS",a.appendChild(A),r.appendChild(a),document.body.appendChild(r)},loadMain:()=>{const r=document.createElement("main");r.id="main";const n=document.createElement("header");r.appendChild(n);const e=document.createElement("h1");e.textContent="INBOX",n.appendChild(e);const t=document.createElement("button");t.type="button",t.id="new-task";const i=document.createElement("i");i.classList.add("fas","fa-plus"),t.appendChild(i),n.appendChild(t);const o=document.createElement("hr");o.classList.add("separator2"),r.appendChild(o);const a=document.createElement("div");a.id="tasks-container",a.classList.add("tasks-container"),r.appendChild(a),document.body.appendChild(r)},loadTasks:r=>{r.forEach((r=>{const n=e(r);document.getElementById("tasks-container").appendChild(n)}))},checkUncheckTask:(r,n)=>{const e=r.querySelector("#checkbox");n?(r.classList.remove("completed"),e.classList.add("task--checkbox__incomplete"),e.classList.remove("task--checkbox__complete")):(r.classList.add("completed"),e.classList.remove("task--checkbox__incomplete"),e.classList.add("task--checkbox__complete"))},openTaskEdition:(r,n)=>{r.querySelector("#edit").style="color: black";const e=r.querySelector("#title-edit");e.classList.remove("hidden"),e.value=n.title;const t=r.querySelector("#description-edit");t.classList.remove("hidden"),t.value=n.description,r.querySelector("#project-edit").classList.remove("hidden"),r.querySelector("#date-edit").classList.remove("hidden"),r.querySelector("#save-changes").classList.remove("hidden"),r.querySelector("#cancel-changes").classList.remove("hidden")},closeTaskEdition:(r,n)=>{r.querySelector("#edit").style="",r.querySelector("#title-edit").classList.add("hidden"),r.querySelector("#description-edit").classList.add("hidden"),r.querySelector("#title").textContent=n.title,r.querySelector("#description").textContent=n.description,r.querySelector("#project-edit").classList.add("hidden"),r.querySelector("#date-edit").classList.add("hidden"),r.querySelector("#save-changes").classList.add("hidden"),r.querySelector("#cancel-changes").classList.add("hidden")},openCreateTaskForm:()=>{let r=document.getElementById("create-task-form"),n=document.getElementById("opaque");r.classList.add("form--visible"),n.classList.add("opaque--visible")},closeCreateTaskForm:()=>{let r=document.getElementById("create-task-form"),n=document.getElementById("opaque");r.reset(),r.classList.remove("form--visible"),n.classList.remove("opaque--visible")},deleteTask:r=>{document.getElementById("tasks-container").removeChild(r)}}};var g=e(382),h={};function E(r,n){if(n.length<r)throw new TypeError(r+" argument"+(r>1?"s":"")+" required, but only "+n.length+" present")}function b(r){E(1,arguments);var n=Object.prototype.toString.call(r);return r instanceof Date||"object"==typeof r&&"[object Date]"===n?new Date(r.getTime()):"number"==typeof r||"[object Number]"===n?new Date(r):("string"!=typeof r&&"[object String]"!==n||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}function B(r){E(1,arguments);var n=b(r);return n.setDate(1),n.setHours(0,0,0,0),n}function f(r){E(1,arguments);var n=b(r),e=n.getDay();return e}function k(r){E(1,arguments);var n=b(r),e=n.getDate();return e}function y(r){if(null===r||!0===r||!1===r)return NaN;var n=Number(r);return isNaN(n)?n:n<0?Math.ceil(n):Math.floor(n)}function x(r,n){E(1,arguments);var e=n||{},t=e.locale,i=t&&t.options&&t.options.weekStartsOn,o=null==i?0:y(i),a=null==e.weekStartsOn?o:y(e.weekStartsOn);if(!(a>=0&&a<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var s=k(r);if(isNaN(s))return s;var d=f(B(r)),A=0,c=1;if(s>(A=d>=a?a+7-d:a-d)){var l=s-A;c+=Math.ceil(l/7)}return c}function v(r,n){E(2,arguments);var e=b(r),t=y(n);return isNaN(t)?new Date(NaN):t?(e.setDate(e.getDate()+t),e):e}function w(r,n){E(2,arguments);var e=y(n);return v(r,-e)}function L(r){E(1,arguments);var n=b(r),e=n.getMonth();return e}function _(r,n){E(2,arguments);var e=b(r),t=y(n);if(isNaN(t))return new Date(NaN);if(!t)return e;var i=e.getDate(),o=new Date(e.getTime());o.setMonth(e.getMonth()+t+1,0);var a=o.getDate();return i>=a?o:(e.setFullYear(o.getFullYear(),o.getMonth(),i),e)}h.styleTagTransform=p(),h.setAttributes=d(),h.insert=a().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=c(),n()(g.Z,h),g.Z&&g.Z.locals&&g.Z.locals;const I=()=>{const r=new Date;let n=B(r);const e=f(n);let t=7*(x(n)-1)+e+1;const i=new Array(42);function o(){t=7*(x(n)-1)+f(n)+1,i[t-1]=n;for(let r=t-2;r>=0;r--)i[r]=w(i[r+1],1);for(let r=t;r<i.length;r++)i[r]=v(i[r-1],1)}function a(){i.forEach((r=>{if(L(r)==L(n)){let n=7*(x(r)-1)+(f(r)+1);document.querySelector(`[data-pos="${n}"]`).textContent=`${k(r)}`}}))}function s(){for(let r=1;r<=42;r++)document.querySelector(`[data-pos="${r}"]`).textContent=""}function d(){const r=L(n),e=function(r){return E(1,arguments),b(r).getFullYear()}(n);let t="";switch(r){case 0:t=document.getElementById("month"),t.textContent=`Jan ${e}`;break;case 1:t=document.getElementById("month"),t.textContent=`Feb ${e}`;break;case 2:t=document.getElementById("month"),t.textContent=`Mar ${e}`;break;case 3:t=document.getElementById("month"),t.textContent=`Apr ${e}`;break;case 4:t=document.getElementById("month"),t.textContent=`May ${e}`;break;case 5:t=document.getElementById("month"),t.textContent=`Jun ${e}`;break;case 6:t=document.getElementById("month"),t.textContent=`Jul ${e}`;break;case 7:t=document.getElementById("month"),t.textContent=`Aug ${e}`;break;case 8:t=document.getElementById("month"),t.textContent=`Sep ${e}`;break;case 9:t=document.getElementById("month"),t.textContent=`Oct ${e}`;break;case 10:t=document.getElementById("month"),t.textContent=`Nov ${e}`;break;case 11:t=document.getElementById("month"),t.textContent=`Dic ${e}`}}function A(){n=_(n,1),o(),s(),d(),a()}function c(){n=function(r,n){E(2,arguments);var e=y(n);return _(r,-e)}(n,1),o(),s(),d(),a()}function l(){const r=this.textContent,n=document.getElementById("month").textContent.split(" ")[0],e=document.getElementById("month").textContent.split(" ")[1],t=`${n} ${r}, ${e}`,i=new Date(e,["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dic"].indexOf(n),r);return console.log(t),i}function p(){n=B(r),o(),s(),d(),a()}return{createCalendar:function(){const r=document.createElement("div");r.classList.add("calendar-container");const n=document.createElement("div");n.classList.add("calendar-header");const e=document.createElement("span");e.classList.add("previous","fas","fa-chevron-left"),e.id="previous-month";const t=document.createElement("p");t.id="month";const i=document.createElement("span");i.classList.add("next","fas","fa-chevron-right"),i.id="next-month",n.appendChild(e),n.appendChild(t),n.appendChild(i),r.appendChild(n);const o=document.createElement("div");o.classList.add("calendar-grid");const a=document.createElement("div");a.classList.add("grid-header");const s=document.createElement("p");s.textContent="Sun";const d=document.createElement("p");d.textContent="Mon";const u=document.createElement("p");u.textContent="Tue";const m=document.createElement("p");m.textContent="Wed";const C=document.createElement("p");C.textContent="Thu";const g=document.createElement("p");g.textContent="Fri";const h=document.createElement("p");h.textContent="Sat",a.appendChild(s),a.appendChild(d),a.appendChild(u),a.appendChild(m),a.appendChild(C),a.appendChild(g),a.appendChild(h),o.appendChild(a);const E=document.createElement("div");E.classList.add("grid-body"),E.id="grid-body";for(let r=1;r<=42;r++){const n=document.createElement("p");n.dataset.pos=`${r}`,n.classList.add("grid-cell"),E.appendChild(n),n.addEventListener("click",l.bind(n))}return o.appendChild(E),r.appendChild(o),i.addEventListener("click",A),e.addEventListener("click",c),t.addEventListener("click",p),r}}};(()=>{const r=C(),n=(()=>{const r={Inbox:[]};return{taskList:r,newTask:(n,e,t,i,o,a=!1)=>{const s={title:n,description:e,date:t,priority:i,project:o,isCompleted:a};return r[o].push(s),s},deleteTask:n=>{const e=r[n.project].indexOf(n);r[n.project].splice(e,1)}}})(),e=I();function t(){const n=this[0],e=this[1];r.checkUncheckTask(n,e.isCompleted),e.isCompleted?e.isCompleted=!1:e.isCompleted=!0}function i(){const r=this[0],n=this[1],e=r.querySelector("#priority");e.classList.remove("task--priority__very-high","task--priority__high","task--priority__normal","task--priority__low","task--priority__very-low"),e.classList.add("task--priority__very-low"),n.priority="Very Low"}function o(){const r=this[0],n=this[1],e=r.querySelector("#priority");e.classList.remove("task--priority__very-high","task--priority__high","task--priority__normal","task--priority__low","task--priority__very-low"),e.classList.add("task--priority__low"),n.priority="Low"}function a(){const r=this[0],n=this[1],e=r.querySelector("#priority");e.classList.remove("task--priority__very-high","task--priority__high","task--priority__normal","task--priority__low","task--priority__very-low"),e.classList.add("task--priority__normal"),n.priority="Normal"}function s(){const r=this[0],n=this[1],e=r.querySelector("#priority");e.classList.remove("task--priority__very-high","task--priority__high","task--priority__normal","task--priority__low","task--priority__very-low"),e.classList.add("task--priority__high"),n.priority="High"}function d(){const r=this[0],n=this[1],e=r.querySelector("#priority");e.classList.remove("task--priority__very-high","task--priority__high","task--priority__normal","task--priority__low","task--priority__very-low"),e.classList.add("task--priority__very-high"),n.priority="Very High"}function A(){const n=this[0],e=this[1];r.openTaskEdition(n,e)}function c(){const n=this[0],e=this[1];r.closeTaskEdition(n,e)}function l(){const r=this[0],n=(this[1],e.createCalendar());r.appendChild(n)}function p(){const r=this[0],n=this[1],e=r.querySelector("#title-edit").value,t=r.querySelector("#description-edit").value;n.title=e,n.description=t,r.querySelector("#title").textContent=e,r.querySelector("#description").textContent=t}function u(){const e=this[0],t=this[1];r.deleteTask(e),n.deleteTask(t)}const m=(r,n)=>{const e=[r,n];r.querySelector("#checkbox").addEventListener("click",t.bind(e)),r.querySelector("#priority-vlow").addEventListener("click",i.bind(e)),r.querySelector("#priority-low").addEventListener("click",o.bind(e)),r.querySelector("#priority-normal").addEventListener("click",a.bind(e)),r.querySelector("#priority-high").addEventListener("click",s.bind(e)),r.querySelector("#priority-vhigh").addEventListener("click",d.bind(e)),r.querySelector("#edit").addEventListener("click",A.bind(e));const m=r.querySelector("#save-changes");m.addEventListener("click",p.bind(e)),m.addEventListener("click",c.bind(e)),r.querySelector("#cancel-changes").addEventListener("click",c.bind(e)),r.querySelector("#delete").addEventListener("click",u.bind(e)),r.querySelector("#date-edit").addEventListener("click",l.bind(e))};r.loadSidebar(),r.loadMain(),r.loadTasks(n.taskList.Inbox),document.getElementById("new-task").addEventListener("click",r.openCreateTaskForm),document.getElementById("close-form").addEventListener("click",r.closeCreateTaskForm);const g=document.getElementById("accept-form");g.addEventListener("click",(function(){const e=document.getElementById("task-title").value,t=document.getElementById("task-description").value,i=document.getElementById("task-project").value,o=document.getElementById("task-date").value,a=document.getElementById("task-priority").value,s=n.newTask(e,t,o,a,i),d=r.createTask(s);m(d,s),r.appendTask(d)})),g.addEventListener("click",r.closeCreateTaskForm)})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,